{"version":3,"sources":["../src/lightMarkdown.js","../src/loader.js"],"names":[],"mappings":"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","file":"light-markdown.js","sourcesContent":["/**\n * Created by ShaLi on 07/01/2016.\n */\n'use strict';\n\nvar lightMarkdown = {},\n    tokens = getTokens(),\n    regex = getRegex(tokens),\n    plainToken = '₪₪PLaiN₪₪',\n    options = {},\n    flavors = {\n        slack: {\n            bold: true,\n            italics: true,\n            strikethrough: true,\n            pre: true,\n            code: true,\n            longQuote: true,\n            quote: true,\n            autoLink: true,\n            paragraph: true,\n            lineBreaks: true\n        },\n        skype: {\n            bold: true,\n            italics: true,\n            strikethrough: true,\n            pre: false,\n            code: false,\n            longQuote: false,\n            quote: false,\n            autoLink: true,\n            paragraph: false,\n            lineBreaks: true\n        }\n    };\n\n/**\n * Set a global option\n * @static\n * @param {string} key\n * @param {*} value\n * @returns {lightMarkdown}\n */\nlightMarkdown.setOption = function (key, value) {\n    options[key] = !!value;\n    return this;\n};\n\n/**\n * Get a global option\n * @static\n * @param {string} key\n * @returns {*}\n */\nlightMarkdown.getOption = function (key) {\n    return options[key];\n};\n\n\nlightMarkdown.setFlavor = function (flavorName) {\n    var flavor = flavors[flavorName];\n    if (flavor) {\n        for (var option in flavor) {\n            if (flavor.hasOwnProperty(option)) {\n                options[option] = flavor[option];\n            }\n        }\n    }\n    return this;\n};\n\n\nlightMarkdown.toHtml = function (md) {\n    md = escapeHtml(md);\n    var plains = [];\n\n    // Replace all tokens\n    tokens.forEach(function (t) {\n        if (options[t.name]) {\n            md = md.replace(t.regex, function (match, g1, g2) {\n                if (!g2 ||\n                    t.requireNonTokens && !regex.nonTokensChars.test(g2) ||\n                    (t.token.length === 1 && (g2[0] === t.token || g2.slice(-1) === t.token)) ||\n                    t.spaceWrapIgnored && g2[0] === ' ' && g2.slice(-1) === ' ')\n                    return match;\n\n                if (typeof t.processContent === 'function') {\n                    g2 = t.processContent(g2);\n                }\n                if (t.plainContent) {\n                    var plainIndex = plains.push(g2) - 1;\n                    g2 = plainToken + plainIndex;\n                }\n                return g1 + '<' + t.elementName + '>' + g2 + '</' + t.elementName + '>';\n            });\n        }\n    });\n\n    if (options.longQuote) {\n        md = md.replace(regex.multilineQuote, function (match, g1, g2) {\n            if (match === '&gt;&gt;&gt;')\n                return match;\n\n            // trim start unless there are more '>' ahead\n            g2 = g2.replace(/^([\\s]*)(&gt;)*/, function (m, gg1, gg2) {\n                return gg2 ? m : '';\n            });\n            return '<blockquote>' + g2 + '</blockquote>';\n        });\n    }\n\n    if (options.quote) {\n        md = md.replace(regex.singleLineQuote, function (match, g1, g2) {\n            if (match === '&gt;')\n                return match;\n            g2 = g2.replace(/\\n&gt;/g, '\\n');\n            return '<blockquote>' + g2 + '</blockquote>';\n        });\n    }\n\n    if (options.autoLink) {\n        // Replace links\n        md = md.replace(regex.url, function (match, g1, g2) {\n            if (!g2) {\n                g2 = g1;\n            }\n            return '<a href=\"' + g1 + '\" target=\"_blank\">' + g2 + '</a>';\n        });\n    }\n\n    if (options.paragraph) {\n\n\n        // Create paragraphs\n        var m;\n        var doubleLineIndexes = [];\n        while ((m = regex.doubleLineBreak.exec(md))) {\n            doubleLineIndexes.push({\n                start: m.index,\n                length: m[0].length\n            });\n        }\n        while ((m = regex.blockquoteTags.exec(md))) {\n            doubleLineIndexes.push({\n                start: m.index,\n                length: m[0].length,\n                suffix: m[0]\n            });\n        }\n        doubleLineIndexes.push({\n            start: md.length,\n            length: 0\n        });\n\n        doubleLineIndexes.sort(function (a, b) {\n            return a.start - b.start;\n        });\n\n        var withParagraphs = '';\n        var startIndex = 0;\n        doubleLineIndexes.forEach(function (doubleLine) {\n            var paragraph = '';\n            var paragraphContent = md.substring(startIndex, doubleLine.start);\n            if (paragraphContent) {\n                paragraph = '<p>' + paragraphContent + '</p>';\n            }\n            if (doubleLine.suffix) {\n                paragraph += doubleLine.suffix;\n            }\n            withParagraphs += paragraph;\n            startIndex = doubleLine.start + doubleLine.length;\n        });\n        md = withParagraphs;\n    }\n\n    if (options.lineBreaks) {\n        // Create line breaks\n        md = md.replace(regex.singleLineBreak, '<br/>');\n    }\n    // Restore plain parts\n    plains.forEach(function (p, plainIndex) {\n        md = md.replace(plainToken + plainIndex, p);\n    });\n\n    return md;\n};\n\n\nfunction escapeHtml(content) {\n    if (content) {\n        content = content.replace(/>/g, '&gt;');\n        content = content.replace(/</g, '&lt;');\n    }\n    return content;\n}\n\nfunction getRegex(tokens) {\n    var allTokenChars = tokens.map(function (t) {\n        return t.token.length === 1 ? t.token : '';\n    }).join();\n\n    var nonTokensCharsRegex = new RegExp('[^' + allTokenChars + ']');\n\n    // Multiline quote >>>\n    var multilineQuoteRegex = /(^|\\n)&gt;&gt;&gt;([\\s\\S]*$)/;\n\n    // Single line quote > or sequential lines that start with >.\n    var singleLineQuoteRegex = /(^|\\n)&gt;(([^\\n]*)(\\n&gt;[^\\n]*)*)/g;\n\n    // Two new lines in a row\n    var doubleLineBreakRegex = /\\r?\\n\\r?\\n\\r?/g;\n\n    // Single line break\n    var singleLineBreakRegex = /\\r?\\n\\r?/g;\n\n    var urlRegex = /&lt;((?:https?|ftp|mailto).*?)(?:\\|(.*?(?=&gt;)))?&gt;/gi;\n\n    return {\n        nonTokensChars: nonTokensCharsRegex,\n        multilineQuote: multilineQuoteRegex,\n        singleLineQuote: singleLineQuoteRegex,\n        blockquoteTags: /<\\/?blockquote>/ig,\n        doubleLineBreak: doubleLineBreakRegex,\n        singleLineBreak: singleLineBreakRegex,\n        url: urlRegex\n    };\n}\n\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\n\nfunction getTokens() {\n    var tokens = [\n        {name: 'pre', token: '```', elementName: 'pre', multiline: true, plainContent: true},\n        {name: 'code', token: '`', elementName: 'code', ignoreAfter: true, plainContent: true},\n        {name: 'bold', token: '*', elementName: 'b', requireNonTokens: true, spaceWrapIgnored: true},\n        {name: 'italics', token: '_', elementName: 'i', requireNonTokens: true},\n        {name: 'strikethrough', token: '~', elementName: 's', requireNonTokens: true, spaceWrapIgnored: true}\n    ];\n    tokens.forEach(function (t) {\n        if (!t.regex) {\n            var before = '(^|[\\\\s\\\\?\\\\.,\\\\-!\\\\^;:{(\\\\[%$#+=\"])';\n            var content = t.multiline ? '([\\\\s\\\\S]*?)?' : '(.*?\\\\S *)?';\n            var after = t.ignoreAfter ? '' : '(?=$|\\\\s|[\\\\?\\\\.,\\'\\\\-!\\\\^;:})\\\\]%$~{\\\\[<#+=\"])';\n            var token = escapeRegExp(t.token);\n            var pattern = before + token + content + token + after;\n            t.regex = new RegExp(pattern, 'g');\n        }\n    });\n    return tokens;\n}\n\nlightMarkdown.setFlavor('slack');","var root = this;\n\n// CommonJS/nodeJS Loader\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = lightMarkdown;\n\n// AMD Loader\n} else if (typeof define === 'function' && define.amd) {\n    define(function () {\n        'use strict';\n        return lightMarkdown;\n    });\n\n// Regular Browser loader\n} else {\n    root.lightMarkdown = lightMarkdown;\n}\n"]}